@model List<YouTubeApiProject.Models.YouTubeVideoModel>

<!DOCTYPE html>
<html>
<head>
    <title>Search YouTube Videos</title>
    <style>
        /* Style for the search form */
        h2 {
            color: #333;
            text-align: left;
        }

        form {
            display: flex;
            justify-content: left;
            margin-bottom: 20px;
        }

        input[type="text"] {
            width: 300px;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 5px 0 0 5px;
            font-size: 16px;
        }

        button[type="submit"] {
            padding: 10px 20px;
            border: none;
            background-color: red;
            color: white;
            font-size: 16px;
            cursor: pointer;
            border-radius: 0 5px 5px 0;
        }

            button[type="submit"]:hover {
                background-color: #0056b3;
            }

        /* Category button styles */
        .category-buttons {
            display: flex;
            justify-content: left;
            margin-bottom: 20px;
        }

        .category-button {
            background-color: #f0f0f0;
            border: 1px solid #ddd;
            border-radius: 5px;
            padding: 10px 15px;
            margin-right: 10px;
            cursor: pointer;
            transition: background-color 0.2s;
        }

            .category-button:hover {
                background-color: #e0e0e0;
            }

        /* Container for the video search results */
        .video-results-container {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 20px;
            margin-top: 20px;
        }

        /* Individual video card */
        .video-card {
            display: flex;
            flex-direction: column;
            padding: 15px;
            border: 1px solid #ddd;
            border-radius: 10px;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
            background-color: #fff;
            transition: transform 0.2s;
            overflow: hidden; /* Ensure the content does not overflow */
        }

            /* Hover effect for video card */
            .video-card:hover {
                transform: scale(1.02);
            }

            /* Video title link */
            .video-card a h3 {
                color: #333;
                text-decoration: none;
                margin: 0 0 10px;
                font-size: 1.2em;
                cursor: pointer;
            }

                .video-card a h3:hover {
                    text-decoration: underline;
                }

            /* Video description */
            .video-card p {
                color: #666;
                font-size: 0.9em;
                margin: 10px 0;
            }

            /* Video thumbnail */
            .video-card img {
                width: 100%;
                border-radius: 10px;
                margin: 10px 0;
                cursor: pointer;
            }

        /* Modal styles */
        .modal {
            display: none;
            position: fixed;
            z-index: 1000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            overflow: auto;
            background-color: rgba(0, 0, 0, 0.5);
            justify-content: center;
            align-items: center;
        }

        .modal-content {
            background-color: #fff;
            padding: 20px;
            border: 1px solid #888;
            border-radius: 10px;
            width: 80%;
            max-width: 700px;
            position: relative;
        }

        .close {
            color: #aaa;
            position: absolute;
            right: 10px;
            top: 10px;
            font-size: 28px;
            font-weight: bold;
            cursor: pointer;
        }

            .close:hover,
            .close:focus {
                color: black;
                text-decoration: none;
                cursor: pointer;
            }
    </style>
</head>
<body>
    <h2>Search YouTube Videos</h2>
    <form asp-action="Search" method="post">
        <input type="text" name="query" placeholder="Search for videos..." />
        <button type="submit">Search</button>
    </form>

    <!-- Category buttons -->
    <div class="category-buttons">
        <div class="category-button" onclick="filterVideos('All')">All</div>
        <div class="category-button" onclick="filterVideos('Action')">Action</div>
        <div class="category-button" onclick="filterVideos('Comedy')">Comedy</div>
        <div class="category-button" onclick="filterVideos('Documentary')">Documentary</div>
        <div class="category-button" onclick="filterVideos('Music')">Music</div>
        <div class="category-button" onclick="filterVideos('Sports')">Sports</div>
    </div>


    @if (Model != null && Model.Any())
    {
        <div class="video-results-container">
            @foreach (var video in Model)
            {
                <div class="video-card">
                    <img src="@video.ThumbnailUrl" alt="@video.Title" onclick="openModal('@video.VideoUrl')" />
                    <h3 onclick="openModal('@video.VideoUrl')">@video.Title</h3>
                    <p>@video.Description</p>
                    <br />
                </div>
            }
        </div>
    }

    <!-- The Modal -->
    <div id="videoModal" class="modal">
        <div class="modal-content">
            <span class="close" onclick="closeModal()">&times;</span>
            <div id="videoContainer"></div>
        </div>
    </div>

    <script>
        // Function to open the modal and show the video
        function openModal(videoUrl) {
            const modal = document.getElementById('videoModal');
            const videoContainer = document.getElementById('videoContainer');
            const videoId = getYouTubeVideoId(videoUrl);
            if (videoId) {
                videoContainer.innerHTML = `<iframe width="100%" height="400px" src="https://www.youtube.com/embed/${videoId}" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>`;
                modal.style.display = "flex";
            } else {
                alert("Invalid video URL");
            }
        }

        // Function to extract YouTube video ID from URL
        function getYouTubeVideoId(url) {
            const regex = /(?:https?:\/\/)?(?:www\.)?youtube\.com\/(?:watch\?v=|embed\/|v\/|.+\?v=)?([^&\n?#]+)/;
            const match = url.match(regex);
            return match ? match[1] : null;
        }

        // Function to close the modal
        function closeModal() {
            const modal = document.getElementById('videoModal');
            const videoContainer = document.getElementById('videoContainer');
            modal.style.display = "none";
            videoContainer.innerHTML = "";
        }

        // Close the modal when the user clicks outside of the modal content
        window.onclick = function (event) {
            const modal = document.getElementById('videoModal');
            if (event.target == modal) {
                closeModal();
            }
        }

        function filterVideos(category) {
            const query = document.getElementById('searchQuery').value;
            fetchVideos(query, category);
        }

    </script>
</body>
</html>
